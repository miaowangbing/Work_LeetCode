Given an integer array nums, find the sum of the elements between indices i and j (i ≤ j), inclusive.

Example:
Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3
Note:
You may assume that the array does not change.
There are many calls to sumRange function.


class NumArray {
private:
    vector<int> sums;//保存从0-i之间的和
public:
    NumArray(vector<int> &nums) {
        int sum=0;
        sums.push_back(0);
        for(int i=0;i<nums.size();++i){
            sum+=nums[i];//累加
            sums.push_back(sum);//进栈
        }
    }

    int sumRange(int i, int j) {
        return sums[j+1]-sums[i];
    }
};


// Your NumArray object will be instantiated and called as such:
// NumArray numArray(nums);
// numArray.sumRange(0, 1);
// numArray.sumRange(1, 2);
